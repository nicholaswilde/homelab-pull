---
- name: "AdGuard Home block"
  block:
    - name: "Retrieve DNS rewrites from AdGuard Home"
      ansible.builtin.uri:
        url: "{{ adguard_url }}/control/rewrite/list"
        method: GET
        return_content: true
      register: adguard_rewrites_response

    - name: "Display DNS rewrites"
      ansible.builtin.debug:
        var: adguard_rewrites_response.json
      when: adguard_rewrites_response.status == 200

    - name: "Perform a boolean check for '{{ domain_to_check }}'"
      ansible.builtin.set_fact:
        is_domain_present: "{{ (adguard_rewrites_response.json | default([]) | selectattr('domain', 'equalto', domain_to_check) | list | length) > 0 }}"

    - name: "Display boolean check result for '{{ domain_to_check }}'"
      ansible.builtin.debug:
        msg: "Is '{{ domain_to_check }}' present? {{ is_domain_present }}"

    - name: Perform a boolean check for '{{ domain_to_check_nonexistent }}'
      ansible.builtin.set_fact:
        is_domain_nonexistent_present: "{{ (adguard_rewrites_response.json | default([]) | selectattr('domain', 'equalto', domain_to_check_nonexistent) | list | length) > 0 }}"

    - name: "Display boolean check result for '{{ domain_to_check_nonexistent }}'"
      ansible.builtin.debug:
        msg: "Is '{{ domain_to_check_nonexistent }}' present? {{ is_domain_nonexistent_present }}"

    - name: "Show error if request failed"
      ansible.builtin.debug:
        msg: "Failed to retrieve DNS rewrites. Status code: {{ adguard_rewrites_response.status }}, Response: {{ adguard_rewrites_response.content }}"
      when: adguard_rewrites_response.status != 200
  vars:
    adguard_url: "http://adguard01.l.nicholaswilde.io/"
    domain_to_check: "jellyfin.l.nicholaswilde.io"
    domain_to_check_nonexistent: "test-debian-1.nicholaswilde.io"
