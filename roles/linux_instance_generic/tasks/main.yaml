---
- name: "Setup apt"
  ansible.builtin.include_tasks:
    file: "apt.yaml"
    apply:
      tags:
        - apt
  tags:
    - always

- name: "Setup reprepro"
  ansible.builtin.include_tasks:
    file: "reprepro.yaml"
    apply:
      tags:
        - reprepro
  tags:
    - always

- name: "Install stuff"
  ansible.builtin.include_tasks:
    file: "install.yaml"
    apply:
      tags:
        - install
  tags:
    - always

- name: "Setup dotfiles"
  ansible.builtin.include_tasks:
    file: "dotfiles.yaml"
    apply:
      tags:
        - dotfiles
  tags:
    - always

- name: "Install syncthing"
  ansible.builtin.include_tasks:
    file: "syncthing.yaml"
    apply:
      tags:
        - syncthing
  tags:
    - always
  # when: "{{ ansible_hostname }} != 'amd2'"
  vars:
    control_node_api_key: "{{ linux_generic_instance_syncthing_api_key }}"
    control_node_ip: "{{ linux_instance_generic_syncthing_control_node_ip }}" 
    control_node_port: "{{ linux_instance_generic_syncthing_port }}"
    managed_node_port: "{{ control_node_port }}"
    syncthing_run_user: "{{ ansible_user }}"
    managed_node_api_folders_endpoint: "http://localhost:{{ managed_node_port }}/rest/config/folders"
    control_node_api_devices_endpoint: "http://{{ control_node_ip }}:{{ control_node_port }}/rest/config/devices"
    control_node_api_folders_endpoint: "http://{{ control_node_ip }}:{{ control_node_port }}/rest/config/folders"
    managed_node_api_devices_endpoint: "http://localhost:{{ managed_node_port }}/rest/config/devices"
    control_node_device_id: "{{ linux_generic_instance_syncthing_device_id }}"

- name: "Setup beszel"
  ansible.builtin.include_tasks:
    file: "beszel.yaml"
    apply:
      tags:
        - beszel
  tags:
    - always

- name: "Setup cheat"
  ansible.builtin.include_tasks:
    file: "cheat.yaml"
    apply:
      tags:
        - cheat
  tags:
    - always

- name: "Setup git"
  ansible.builtin.include_tasks:
    file: "git.yaml"
    apply:
      tags:
        - git
  tags:
    - always

- name: "Setup bash"
  ansible.builtin.include_tasks:
    file: "bash.yaml"
    apply:
      tags:
        - bash
  tags:
    - always

- name: "Setup ChromeOS scripts"
  ansible.builtin.include_tasks:
    file: "chromeos.yaml"
    apply:
      tags:
        - chromeos
  loop:
    - sourceFile: "hterm-notify.sh"
      destFile: "notify"
    - sourceFile: "hterm-show-file.sh"
      destFile: "show-file"
    - sourceFile: "osc52.sh"
      destFile: "copy"
  tags:
    - always

- name: "Setup micro"
  ansible.builtin.include_tasks:
    file: "micro.yaml"
    apply:
      tags:
        - micro
  tags:
    - always

- name: "Setup tmux"
  ansible.builtin.include_tasks:
    file: "tmux.yaml"
    apply:
      tags:
        - tmux
        - test
  tags:
    - always

- name: "Setup apprise"
  ansible.builtin.include_tasks:
    file: "apprise.yaml"
    apply:
      become: false
      tags:
        - apprise
  tags:
    - always

- name: "Setup autofs"
  ansible.builtin.include_tasks:
    file: "autofs.yaml"
    apply:
      tags:
        - autofs
        - test
  tags:
    - always
